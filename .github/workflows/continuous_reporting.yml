name: Continuous reporting

on:
  workflow_run:
    workflows: ["Continuous building and testing"]
    types: [completed]
  release:
    types: [published]

jobs:

  generate-report:
    name: Building & Testing
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    permissions:
      contents: write
      packages: read
      checks: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Python
        uses: actions/setup-python@8d9ed9ac5c53483de85588cdf95a591a75ab9f55 # v5.5.0
        with:
          python-version: "3.13"
          cache: "pip"

      - name: Install virtual environment
        run: |
          make venv-clean venv-install 
          pip install sphinx pytest coverage pylint

      - name: Generate Documentation
        run: |
          sphinx-apidoc -o docs/source src/main/python
          sphinx-build -b html docs/source docs/build/html

      - name: Upload generated documentation as artifact
        uses: actions/upload-artifact@v4
        with:
          name: sphinx-html-docs
          path: docs/build/html

      - name: Zip HTML documentation
        run: |
          cd docs/build
          zip -r html-docs.zip html

      - name: Upload zipped documentation to release
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v2.2.2
        with:
          tag_name: ${{ github.event.release.tag_name }}
          name: Docstring documentation
          files: docs/build/html-docs.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run unit tests and BDD scenarios
        run: make venv-test-action

      - name: Build test report
        uses: simple-elf/allure-report-action@f841fec0e421b5d7d8e807dedfb03efb8cf30303 # v1.12
        if: always()
        with:
          allure_history: allure-history
          allure_results: allure-results

      - name: Upload test report as artifact
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: allure-history

      - name: Zip test report
        run: zip -r test-report.zip allure-history

      - name: Upload zipped test report to release
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v2.2.2
        with:
          tag_name: ${{ github.event.release.tag_name }}
          name: Test report
          files: test-report.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run unit tests with coverage
        run: make venv-test-coverage-xml

      - name: Upload test coverage as artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml

      - name: Zip coverage report
        run: zip -r coverage-report.zip coverage.xml

      - name: Upload zipped coverage report to release
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v2.2.2
        with:
          tag_name: ${{ github.event.release.tag_name }}
          name: Coverage report
          files: coverage-report.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}