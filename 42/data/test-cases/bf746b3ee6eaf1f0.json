{"uid":"bf746b3ee6eaf1f0","name":"Logarithm of negative real","fullName":"Integer Arithmetic Expressions: Logarithm of negative real","historyId":"2e4d8980329db50cc14e69122cad8776","time":{"start":1744915588999,"stop":1744915588999,"duration":0},"status":"broken","statusMessage":"\nYou can implement step definitions for undefined steps with these snippets:\n\n@given(u'a real number -5.0')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Given a real number -5.0')\n\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"\nYou can implement step definitions for undefined steps with these snippets:\n\n@given(u'a real number -5.0')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Given a real number -5.0')\n\n","steps":[{"name":"Given I initialise a calculator","time":{"start":1744915588999,"stop":1744915588999,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Given a real number -5.0","time":{"start":1744915588999,"stop":1744915588999,"duration":0},"status":"broken","statusMessage":"\nYou can implement step definitions for undefined steps with these snippets:\n\n@given(u'a real number -5.0')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Given a real number -5.0')\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true},{"name":"When I take the logarithm","time":{"start":1744915588999,"stop":1744915588999,"duration":0},"status":"broken","statusMessage":"\nYou can implement step definitions for undefined steps with these snippets:\n\n@when(u'I take the logarithm')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: When I take the logarithm')\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true},{"name":"Then the result should be NaN","time":{"start":1744915588999,"stop":1744915588999,"duration":0},"status":"broken","statusMessage":"\nYou can implement step definitions for undefined steps with these snippets:\n\n@then(u'the result should be NaN')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Then the result should be NaN')\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":4,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"severity","value":"normal"},{"name":"feature","value":"Integer Arithmetic Expressions"},{"name":"framework","value":"behave"},{"name":"language","value":"cpython3"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"bf746b3ee6eaf1f0.json","parameterValues":[]}