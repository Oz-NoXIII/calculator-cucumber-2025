{"uid":"8ca87df54750c23c","name":"Adding a list of rational numbers","fullName":"Integer Arithmetic Expressions: Adding a list of rational numbers","historyId":"e526d187bf5755ac127e59ecdfb1c110","time":{"start":1744915588981,"stop":1744915588982,"duration":1},"status":"broken","statusMessage":"\nYou can implement step definitions for undefined steps with these snippets:\n\n@given(u'the following list of rational numbers')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Given the following list of rational numbers')\n\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"\nYou can implement step definitions for undefined steps with these snippets:\n\n@given(u'the following list of rational numbers')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Given the following list of rational numbers')\n\n","steps":[{"name":"Given I initialise a calculator","time":{"start":1744915588982,"stop":1744915588982,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Given the following list of rational numbers","time":{"start":1744915588982,"stop":1744915588982,"duration":0},"status":"broken","statusMessage":"\nYou can implement step definitions for undefined steps with these snippets:\n\n@given(u'the following list of rational numbers')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Given the following list of rational numbers')\n\n","steps":[],"attachments":[{"uid":"c727c7e21d1a1285","name":".table","source":"c727c7e21d1a1285.csv","type":"text/csv","size":13}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},{"name":"When I compute their sum","time":{"start":1744915588982,"stop":1744915588982,"duration":0},"status":"broken","statusMessage":"\nYou can implement step definitions for undefined steps with these snippets:\n\n@when(u'I compute their sum')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: When I compute their sum')\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true},{"name":"Then the rational result should be 1/1","time":{"start":1744915588982,"stop":1744915588982,"duration":0},"status":"broken","statusMessage":"\nYou can implement step definitions for undefined steps with these snippets:\n\n@then(u'the rational result should be 1/1')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Then the rational result should be 1/1')\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":4,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"severity","value":"normal"},{"name":"feature","value":"Integer Arithmetic Expressions"},{"name":"framework","value":"behave"},{"name":"language","value":"cpython3"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"8ca87df54750c23c.json","parameterValues":[]}